[
  {
      "question": "What are my best-selling items?",
      "answer": {
          "text": "Top 5 items by total sales:",
          "type": "table",
          "code": "df.groupby('item_name')['order_value'].sum().nlargest(5).reset_index()",
          "insight": "{df.groupby('item_name')['order_value'].sum().idxmax()} is the top seller with ${df.groupby('item_name')['order_value'].sum().max():,.2f} revenue"
      }
  },
  {
      "question": "Show me delivery time distribution",
      "answer": {
          "text": "Delivery duration analysis:",
          "type": "visualization",
          "code": "df['delivery_duration'] = (pd.to_datetime(df['delivery_time']) - pd.to_datetime(df['order_time'])).dt.total_seconds()/60\nplt.hist(df['delivery_duration'], bins=20, color='#00B14F')\nplt.title('Delivery Time Distribution')\nplt.xlabel('Minutes')\nplt.ylabel('Order Count')",
          "insight": "Average delivery time: {df['delivery_duration'].mean():.1f} minutes"
      }
  },
  {
      "question": "What's my monthly sales growth?",
      "answer": {
          "text": "Monthly sales performance:",
          "type": "visualization",
          "code": "monthly_sales = df.set_index(pd.to_datetime(df['order_time'])).resample('M')['order_value'].sum()\nmonthly_sales.plot(kind='line', marker='o', figsize=(10,5), color='#00B14F')\nplt.title('Monthly Sales Trend')\nplt.ylabel('Total Sales ($)')",
          "insight": "Peak month: {monthly_sales.idxmax().strftime('%B %Y')} (${monthly_sales.max():,.2f})"
      }
  },
  {
      "question": "Which hours have the most orders?",
      "answer": {
          "text": "Order frequency by hour:",
          "type": "visualization",
          "code": "df['order_hour'] = pd.to_datetime(df['order_time']).dt.hour\nhourly_orders = df['order_hour'].value_counts().sort_index()\nhourly_orders.plot(kind='bar', color='#00B14F', figsize=(10,5))\nplt.title('Orders by Hour of Day')\nplt.xlabel('Hour')\nplt.ylabel('Number of Orders')",
          "insight": "Busiest hour: {hourly_orders.idxmax()}:00 ({hourly_orders.max()} orders)"
      }
  },
  {
      "question": "What's my repeat customer rate?",
      "answer": {
          "text": "Customer loyalty analysis:",
          "type": "metric",
          "code": "repeat_rate = df.groupby('eater_id')['order_id'].nunique().gt(1).mean()",
          "insight": "{repeat_rate:.1%} of customers ordered more than once"
      }
  },
  {
      "question": "Show me order value distribution",
      "answer": {
          "text": "Order value ranges:",
          "type": "visualization",
          "code": "bins = [0, 20, 50, 100, 500, 1000, 2000]\ndf['order_value'].plot(kind='hist', bins=bins, color='#00B14F')\nplt.title('Order Value Distribution')\nplt.xlabel('Order Value ($)')",
          "insight": "{len(df[df['order_value'] > 500])} large orders (>$500)"
      }
  },
  {
      "question": "What's the average preparation time?",
      "answer": {
          "text": "Kitchen performance metrics:",
          "type": "metric",
          "code": "df['prep_time'] = (pd.to_datetime(df['driver_pickup_time']) - pd.to_datetime(df['order_time'])).dt.total_seconds()/60",
          "insight": "Average prep time: {df['prep_time'].mean():.1f} minutes"
      }
  },
  {
      "question": "Show me delivery time vs order value",
      "answer": {
          "text": "Delivery speed analysis:",
          "type": "visualization",
          "code": "df.plot.scatter(x='delivery_duration', y='order_value', alpha=0.5, color='#00B14F')\nplt.title('Delivery Time vs Order Value')\nplt.xlabel('Delivery Minutes')\nplt.ylabel('Order Value ($)')",
          "insight": "Correlation: {df[['delivery_duration','order_value']].corr().iloc[0,1]:.2f}"
      }
  },
  {
      "question": "How many new vs returning customers per month?",
      "answer": {
          "text": "Customer retention analysis:",
          "type": "visualization",
          "code": "df['customer_type'] = df.groupby('eater_id').cumcount().map(lambda x: 'New' if x==0 else 'Returning')\nmonthly_breakdown = df.pivot_table(index=pd.to_datetime(df['order_time']).dt.to_period('M'), columns='customer_type', values='order_id', aggfunc='count')\nmonthly_breakdown.plot(kind='bar', stacked=True)",
          "insight": "Retention rate: {len(df[df['customer_type']=='Returning'])/len(df[df['customer_type']=='New']):.1%}"
      }
  },
  {
      "question": "What's my average driver wait time at restaurant?",
      "answer": {
          "text": "Driver waiting time analysis:",
          "type": "metric",
          "code": "df['driver_wait'] = (pd.to_datetime(df['driver_pickup_time']) - pd.to_datetime(df['driver_arrival_time'])).dt.total_seconds()/60\nwait_by_hour = df.groupby(pd.to_datetime(df['order_time']).dt.hour)['driver_wait'].mean()",
          "insight": "Average wait time: {df['driver_wait'].mean():.1f} minutes"
      }
  },
  {
      "question": "Show me order patterns for high-value orders",
      "answer": {
          "text": "High-value order analysis:",
          "type": "visualization",
          "code": "high_value = df[df['order_value'] > df['order_value'].quantile(0.9)]\nhigh_value_hours = high_value.groupby(pd.to_datetime(high_value['order_time']).dt.hour)['order_id'].count()\nplt.figure(figsize=(10,5))\nhigh_value_hours.plot(kind='bar', color='#00B14F')\nplt.title('High-Value Orders by Hour')\nplt.xlabel('Hour of Day')\nplt.ylabel('Number of Orders')",
          "insight": "Peak hour for high-value orders: {high_value_hours.idxmax()}:00"
      }
  },
  {
      "question": "Show me customer reorder frequency",
      "answer": {
          "text": "Customer reorder pattern analysis:",
          "type": "table",
          "code": "reorder_freq = df.groupby('eater_id')['order_id'].count().value_counts().sort_index()\nreorder_dist = pd.DataFrame({'orders': reorder_freq.index, 'customers': reorder_freq.values})",
          "insight": "Average orders per customer: {df.groupby('eater_id')['order_id'].count().mean():.1f}"
      }
  },
  {
      "question": "What's my average time between orders for repeat customers?",
      "answer": {
          "text": "Customer ordering frequency analysis:",
          "type": "metric",
          "code": "repeat_customers = df.groupby('eater_id').filter(lambda x: len(x) > 1)\nrepeat_customers = repeat_customers.sort_values('order_time')\nrepeat_customers['time_between_orders'] = repeat_customers.groupby('eater_id')['order_time'].diff().dt.total_seconds()/(60*60*24)",
          "insight": "Average days between orders: {repeat_customers['time_between_orders'].mean():.1f}"
      }
  },
  {
      "question": "Show me the impact of order value on delivery time",
      "answer": {
          "text": "Order value vs delivery performance:",
          "type": "visualization",
          "code": "value_bins = pd.qcut(df['order_value'], 5)\ndelivery_by_value = df.groupby(value_bins)['delivery_duration'].mean()\nplt.figure(figsize=(10,6))\ndelivery_by_value.plot(kind='bar', color='#00B14F')\nplt.title('Delivery Duration by Order Value Quintile')\nplt.xlabel('Order Value Range')\nplt.ylabel('Average Delivery Time (Minutes)')",
          "insight": "Correlation between order value and delivery time: {df['order_value'].corr(df['delivery_duration']):.2f}"
      }
  },
  {
      "question": "What's my average delivery radius performance?",
      "answer": {
          "text": "Delivery time by distance analysis:",
          "type": "visualization",
          "code": "delivery_ranges = pd.qcut(df['delivery_duration'], 4, labels=['Short', 'Medium', 'Long', 'Very Long'])\nrange_stats = df.groupby(delivery_ranges)['order_value'].agg(['mean', 'count'])\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15,6))\nrange_stats['mean'].plot(kind='bar', ax=ax1, color='#00B14F', title='Average Order Value by Delivery Time')\nrange_stats['count'].plot(kind='bar', ax=ax2, color='#00B14F', title='Number of Orders by Delivery Time')",
          "insight": "Most deliveries fall in the {range_stats['count'].idxmax()} range"
      }
  },
  {
      "question": "Show me the impact of promotions on sales",
      "answer": {
          "text": "Promotion effectiveness analysis:",
          "type": "visualization",
          "code": "promo_sales = df[df['promo_applied'] == True].groupby('promo_code')['order_value'].sum()\npromo_sales.plot(kind='bar', color='#00B14F')\nplt.title('Sales by Promotion Code')\nplt.xlabel('Promotion Code')\nplt.ylabel('Total Sales ($)')",
          "insight": "Most effective promo: {promo_sales.idxmax()} (${promo_sales.max():,.2f})"
      }
  },
  {
      "question": "What's my average order size by city?",
      "answer": {
          "text": "City-wise order size analysis:",
          "type": "visualization",
          "code": "city_order_size = df.groupby('city_id')['order_id'].count() / df['city_id'].value_counts()\ncity_order_size.plot(kind='bar', color='#00B14F')\nplt.title('Average Order Size by City')\nplt.xlabel('City ID')\nplt.ylabel('Average Order Size')",
          "insight": "Largest average order size: {city_order_size.idxmax()} ({city_order_size.max():.1f})"
      }
  },
  {
      "question": "What's my average order value by customer segment?",
      "answer": {
          "text": "Customer segment order value analysis:",
          "type": "visualization",
          "code": "segment_order_value = df.groupby('customer_segment')['order_value'].mean()\nsegment_order_value.plot(kind='bar', color='#00B14F')\nplt.title('Average Order Value by Customer Segment')\nplt.xlabel('Customer Segment')\nplt.ylabel('Average Order Value ($)')",
          "insight": "Highest average order value: {segment_order_value.idxmax()} (${segment_order_value.max():,.2f})"
      }
  },
  {
      "question": "How to increase my sales?",
      "answer": {
          "text": "To increase your sales, consider using targeted advertising strategies. You can explore Grab Ads to reach more customers.",
          "type": "action",
          "action": {
              "label": "Learn More About Grab Ads",
              "url": "/"
          }
      }
  },
  {
      "question": "What's my current inventory status?",
      "answer": {
          "text": "Your current inventory status is as follows: 10 items are low in stock, and 5 items are out of stock. Please restock to avoid disruptions.",
          "type": "action",
          "action": {
              "label": "View Inventory Details",
              "url": "/inventory"
          }
      }
  },
  {
      "question": "What's my sales status?",
      "answer": {
          "text": "Your sales status is as follows: Total sales for this month are $12,345, with a 15% increase compared to last month.",
          "type": "action",
          "action": {
              "label": "View Detailed Sales Report",
              "url": "/sales-report"
          }
      }
  },
  {
      "question": "What's my gamification level?",
      "answer": {
          "text": "Your gamification level is Bronze. Complete more challenges and increase customer engagement to level up!",
          "type": "action",
          "action": {
              "label": "View Gamification Dashboard",
              "url": "/profile"
          }
      }
  },
  {
      "question": "What are my payment details for subscription?",
      "answer": {
          "text": "Your subscription payment details are as follows: You are currently subscribed to the Premium Plan at RM 499/year. Your next payment is due on 15th May 2025.",
          "type": "action",
          "action": {
              "label": "View Payment Details",
              "url": "/payment"
          }
      }
  }
]